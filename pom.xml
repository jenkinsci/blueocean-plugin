<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci.plugins</groupId>
    <artifactId>plugin</artifactId>
    <version>4.25</version>
    <relativePath />
  </parent>

  <groupId>io.jenkins.blueocean</groupId>
  <artifactId>blueocean-parent</artifactId>
  <version>${revision}${changelist}</version>
  <packaging>pom</packaging>

  <name>Blue Ocean Parent</name>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <revision>1.25.3</revision>
    <changelist>-SNAPSHOT</changelist>
    <gitHubRepo>jenkinsci/blueocean-plugin</gitHubRepo>
    <java.level>8</java.level>
    <!--
        when changing jenkins core version please remember to change it in Jenkinsfile as well jenkinsVersions
        and  acceptance-tests/runner/scripts/args.sh
    -->
    <jenkins.version>2.277.4</jenkins.version>
    <javadoc.exec.goal>javadoc-no-fork</javadoc.exec.goal> <!-- stop initialize phase plugins executing twice -->
    <frontend-version>1.12.0</frontend-version>
    <node.version>10.13.0</node.version>
    <npm.version>6.14.4</npm.version>
    <powermock.version>2.0.9</powermock.version>
    <hamcrest.version>2.2</hamcrest.version>
    <mockito.version>3.10.0</mockito.version>
    <jacoco.version>0.8.6</jacoco.version>
    <jacoco.haltOnFailure>false</jacoco.haltOnFailure>
    <jacoco.line.coverage>0.70</jacoco.line.coverage>
    <jacoco.missedclass.coverage>0.00</jacoco.missedclass.coverage>
    <hpi.dependencyResolution>runtime</hpi.dependencyResolution>
    <access-modifier-checker.failOnError>true</access-modifier-checker.failOnError>
    <!-- override this as memory in parent pom is not big enough -->
    <argLine>-Xmx2g -Xms2g -Djava.awt.headless=true -XX:+HeapDumpOnOutOfMemoryError -XX:+TieredCompilation -XX:TieredStopAtLevel=1</argLine>
  </properties>

  <scm>
    <connection>scm:git:https://github.com/${gitHubRepo}.git</connection>
    <developerConnection>scm:git:https://github.com/${gitHubRepo}.git</developerConnection>
    <url>https://github.com/${gitHubRepo}</url>
    <tag>${scmTag}</tag>
  </scm>

  <url>https://github.com/jenkinsci/blueocean-plugin</url>

  <developers>
     <developer>
       <id>scherler</id>
       <name>Thorsten Iberian Sumurai</name>
     </developer>
     <developer>
       <id>cliffmeyers</id>
       <name>Cliff Meyers</name>
     </developer>
     <developer>
       <id>tfennelly</id>
       <name>Tom Fennelly</name>
     </developer>
     <developer>
       <id>vivek</id>
       <name>Vivek Pandey</name>
     </developer>
     <developer>
       <id>kohsuke</id>
       <name>Kohsuke</name>
     </developer>
     <developer>
       <id>sophistifunk</id>
       <name>Josh McDonald</name>
     </developer>
     <developer>
       <id>imeredith</id>
       <name>Ivan Meredith</name>
     </developer>
     <developer>
       <id>michaelneale</id>
       <name>Michael Neale</name>
     </developer>
     <developer>
       <id>kzantow</id>
       <name>Keith Zantow</name>
     </developer>
     <developer>
       <id>i386</id>
       <name>James Dumay</name>
     </developer>
     <developer>
       <id>marcesher</id>
       <name>Marc</name>
     </developer>
     <developer>
       <id>dragoonis</id>
       <name>Paul Dragoonis</name>
     </developer>
     <developer>
       <id>pragmaticivan</id>
       <name>Ivan Santos</name>
     </developer>
     <developer>
       <id>PeterDaveHello</id>
       <name>Peter Dave Hello</name>
     </developer>
     <developer>
       <id>alexsomai</id>
       <name>Alexandru Somai</name>
     </developer>
  </developers>

  <modules>
    <module>jenkins-design-language</module>
    <module>blueocean-core-js</module>
    <module>blueocean-commons</module>
    <module>blueocean-i18n</module>
    <module>blueocean-web</module>
    <module>blueocean-rest</module>
    <module>blueocean-pipeline-scm-api</module>
    <module>blueocean-rest-impl</module>
    <module>blueocean-pipeline-api-impl</module>
    <module>blueocean-events</module>
    <module>blueocean-dashboard</module>
    <module>blueocean-personalization</module>
    <module>blueocean-config</module>
    <module>blueocean</module>
    <module>blueocean-jwt</module>
    <module>blueocean-github-pipeline</module>
    <module>blueocean-git-pipeline</module>
    <module>blueocean-bitbucket-pipeline</module>
    <module>blueocean-pipeline-editor</module>
    <module>blueocean-jira</module>
    <module>blueocean-executor-info</module>
  </modules>

  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>log4j-over-slf4j</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
          <version>1.15</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>commons-lang</groupId>
          <artifactId>commons-lang</artifactId>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest</artifactId>
          <version>${hamcrest.version}</version>
          <scope>test</scope>
      </dependency>
      <!-- This is needed in order to force junit4 and JTH tests to use newer hamcrest version -->
      <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
          <version>${hamcrest.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-library</artifactId>
          <version>${hamcrest.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.13.2</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>com.mashape.unirest</groupId>
          <artifactId>unirest-java</artifactId>
          <scope>test</scope>
          <exclusions>
              <exclusion>
                  <groupId>org.json</groupId>
                  <artifactId>json</artifactId>
              </exclusion>
          </exclusions>
      </dependency>

      <!-- Needed for unirest -->
      <dependency>
          <groupId>org.powermock</groupId>
          <artifactId>powermock-module-junit4-common</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.powermock</groupId>
          <artifactId>powermock-module-junit4</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.powermock</groupId>
          <artifactId>powermock-api-mockito2</artifactId>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.jacoco</groupId>
          <artifactId>org.jacoco.agent</artifactId>
          <classifier>runtime</classifier>
          <version>${jacoco.version}</version>
          <scope>test</scope>
      </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>

        <dependency>
            <groupId>io.jenkins.tools.bom</groupId>
            <artifactId>bom-2.277.x</artifactId>
            <version>984.vb5eaac999a7e</version>
            <scope>import</scope>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci</groupId>
            <artifactId>symbol-annotation</artifactId>
            <version>1.23</version>
        </dependency>

        <!-- Module versions -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-commons</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-i18n</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jenkins-design-language</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-core-js</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-web</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-rest</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-dashboard</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-personalization</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-events</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-rest-impl</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-pipeline-scm-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-pipeline-api-impl</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-config</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-jwt</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-jira</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-executor-info</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- TODO: should be moved out of blueocean repo as separate plugin -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-github-pipeline</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-git-pipeline</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-bitbucket-pipeline</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>blueocean-pipeline-editor</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>pipeline-milestone-step</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>github-branch-source</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>cloudbees-bitbucket-branch-source</artifactId>
            <version>2.9.11</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-artifact</artifactId>
            <version>3.5.0</version>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>io.jenkins.blueocean.rest.annotation</groupId>
            <artifactId>capability-annotation</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>blueocean-autofavorite</artifactId>
            <version>1.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>blueocean-display-url</artifactId>
            <version>2.4.1</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>jira</artifactId>
            <version>3.0.14</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.objenesis</groupId>
                    <artifactId>objenesis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.main</groupId>
            <artifactId>jenkins-test-harness-tools</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.main</groupId>
            <artifactId>jenkins-test-harness</artifactId>
            <version>${jenkins-test-harness.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>pubsub-light</artifactId>
            <version>1.16</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>sse-gateway</artifactId>
            <version>1.24</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>github-api</artifactId>
            <version>1.114.2</version>
        </dependency>
        <dependency>
            <groupId>io.jenkins.plugins</groupId>
            <artifactId>okhttp-api</artifactId>
            <version>3.12.12.2</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.12.12</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
            <version>2.0.8</version>
        </dependency>
        <dependency>
            <groupId>org.bitbucket.b_c</groupId>
            <artifactId>jose4j</artifactId>
            <version>0.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.jvnet.hudson.plugins</groupId>
            <artifactId>favorite</artifactId>
            <version>2.3.1</version>
            <exclusions>
                <!-- Upper bound fix: Remove it once token-micro plugin is fixed to remove dependency on asm-tree
                     PR https://github.com/jenkinsci/token-macro-plugin/pull/31. Fix to be available in 2.4.0.
                -->
                <exclusion>
                    <groupId>org.ow2.asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.ow2.asm</groupId>
                    <artifactId>asm-tree</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.keen</groupId>
            <artifactId>keen-client-api-java</artifactId>
            <version>5.6.0</version>
            <exclusions>
                <!-- upper bound fix, git plugin pulls in later versions -->
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Included in core -->
        <dependency>
            <groupId>org.jenkins-ci.modules</groupId>
            <artifactId>instance-identity</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.github.ua-parser</groupId>
            <artifactId>uap-java</artifactId>
            <version>1.5.2</version>
            <exclusions>
              <!-- commons-collections comes from jenkins core -->
              <exclusion>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
              </exclusion>
            </exclusions>
        </dependency>

        <!-- used in blueocean-pipeline-editor test -->
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>sonar</artifactId>
            <version>2.13.1</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>ant</artifactId>
            <version>1.11</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
            <version>1.4.9</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpmime</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpcore</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpasyncclient</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <!--We need 1.x version untile powermock has decent support for mockito2-->
            <version>${mockito.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>hamcrest-core</artifactId>
                    <groupId>org.hamcrest</groupId>
                </exclusion>
                <!-- Upper bound fix: powermock has later version -->
                <exclusion>
                    <groupId>org.objenesis</groupId>
                    <artifactId>objenesis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4-common</artifactId>
            <version>${powermock.version}</version>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-core</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8-standalone</artifactId>
            <version>2.28.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>async-http-client</artifactId>
            <version>1.7.24.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!--
            jsoup HTML parser library @ http://jsoup.org/
            Using this to get the raw/unprocessed HTML from Jenkins
            -->
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.14.2</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- TODO pending https://github.com/jenkinsci/jenkins-test-harness/pull/2 -->
            <groupId>org.eclipse.sisu</groupId>
            <artifactId>org.eclipse.sisu.plexus</artifactId>
            <version>0.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.damnhandy</groupId>
            <artifactId>handy-uri-templates</artifactId>
            <version>2.1.8</version>
        </dependency>
        <!-- enforcer RequireUpperBoundDeps -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.2</version>
        </dependency>
        <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_annotations</artifactId>
            <version>2.5.1</version>
        </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
      <pluginManagement>
          <plugins>
              <plugin>
                  <groupId>org.kohsuke</groupId>
                  <artifactId>access-modifier-checker</artifactId>
                  <configuration>
                      <failOnError>${access-modifier-checker.failOnError}</failOnError>
                  </configuration>
              </plugin>
              <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-javadoc-plugin</artifactId>
                  <version>3.2.0</version>
              </plugin>
              <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <version>${jacoco.version}</version>
                  <configuration>
                      <haltOnFailure>${jacoco.haltOnFailure}</haltOnFailure>
                      <destFile>${project.build.directory}/code-coverage/jacoco.exec</destFile>
                      <!-- Sets the path to the file which contains the execution data. -->
                      <dataFile>${project.build.directory}/code-coverage/jacoco.exec</dataFile>
                      <!-- Sets the output directory for the code coverage report. -->
                      <outputDirectory>${project.build.directory}/code-coverage/report</outputDirectory>
                  </configuration>

                  <executions>
                      <execution>
                          <id>default-instrument</id>
                          <goals>
                              <goal>instrument</goal>
                          </goals>
                      </execution>
                      <execution>
                          <id>default-restore-instrumented-classes</id>
                          <goals>
                              <goal>restore-instrumented-classes</goal>
                          </goals>
                      </execution>

                      <execution>
                          <id>default-report</id>
                          <phase>prepare-package</phase>
                          <goals>
                              <goal>report</goal>
                          </goals>
                      </execution>
                  </executions>
              </plugin>
          </plugins>
      </pluginManagement>
    <plugins>
      <plugin>
        <!-- TODO: java8 signature doesn't exist yet -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <!-- Disable InjectedTest -->
      <plugin>
          <groupId>org.jenkins-ci.tools</groupId>
          <artifactId>maven-hpi-plugin</artifactId>
          <configuration>
              <disabledTestInjection>true</disabledTestInjection>
              <dependencyResolution>${hpi.dependencyResolution}</dependencyResolution>
          </configuration>
      </plugin>

      <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
              <systemProperties>
                  <property>
                      <name>hudson.udp</name>
                      <value>33849</value>
                  </property>
              </systemProperties>
              <reuseForks>true</reuseForks>
              <forkCount>${concurrency}</forkCount>
              <!--
              The following line is the one that's a must. Without it, will get jacoco complexity failures.
              -->
              <argLine>-Djava.awt.headless=true ${argLine}</argLine>
              <rerunFailingTestsCount>0</rerunFailingTestsCount>
              <systemPropertyVariables>
                  <jacoco-agent.destfile>${project.build.directory}/code-coverage/jacoco.exec</jacoco-agent.destfile>
              </systemPropertyVariables>
          </configuration>
      </plugin>
    </plugins>
  </build>

    <profiles>
        <profile>
            <id>node-execution</id>
            <activation>
                <file>
                    <exists>.mvn_exec_node</exists>
                </file>
            </activation>
            <build>
                <plugins>

                    <plugin>
                        <groupId>io.jenkins.blueocean</groupId>
                        <artifactId>blueocean-maven-plugin</artifactId>
                        <version>0.0.3</version>
                        <executions>
                            <execution>
                                <!-- unpack package.json + JS into node_modules for any deps with JS files -->
                                <!-- NOTE: must use 'initialize' and be declared before frontend-plugin so this occurs before npm install -->
                                <id>upstream-dependencies</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>process-node-dependencies</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>package</id>
                                <goals>
                                    <goal>package-blueocean-resources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>${frontend-version}</version>

                        <executions>

                            <execution>
                                <phase>initialize</phase>
                                <id>install node and npm</id>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                                <configuration>
                                    <nodeVersion>v${node.version}</nodeVersion>
                                    <npmVersion>${npm.version}</npmVersion>
                                    <nodeDownloadRoot>https://repo.jenkins-ci.org/nodejs-dist/</nodeDownloadRoot>
                                    <npmDownloadRoot>https://repo.jenkins-ci.org/npm-dist/</npmDownloadRoot>
                                </configuration>
                            </execution>

                            <execution>
                                <phase>initialize</phase>
                                <id>npm install</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <!-- Note that this may not be omitted lest maven-release-plugin be confused (frontend-maven-plugin #109): -->
                                    <arguments>install ${npm.loglevel}</arguments>
                                </configuration>
                            </execution>

                            <execution>
                                <phase>generate-sources</phase>
                                <id>npm mvnbuild</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <!-- The package.json must define an "mvnbuild" script -->
                                    <arguments>run mvnbuild</arguments>
                                </configuration>
                            </execution>

                            <execution>
                                <phase>test</phase>
                                <id>npm mvntest</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <!-- The package.json must define an "mvntest" script -->
                                    <arguments>run mvntest</arguments>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ath-build</id>
            <modules>
                <module>acceptance-tests</module>
            </modules>
        </profile>
    </profiles>
</project>
